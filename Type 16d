// Type 16d

// Begin with 16d to 16a

K<t> := FunctionField(Rationals());
R<x0,x1,x2,x3,x4,y,A,b,c,d0,d1,d2> := PolynomialRing(K,[1,1,1,1,1,1,2,2,2,1,1,1]);

// Defining type 16d1
d := d0*x0+d1*x1+d2*x2;
Mat1 := -AntisymmetricMatrix(R,[b,c,x3,d,x1,x0,0,x0,x1,x2]);
I1 := Ideal(Pfaffians(Mat1,4));
J1 := Ideal([x0,x1,x2]);

// Checking Betti table
q := MinimalBasis(ColonIdeal(I1,J1))[6] + A*y^2;
K1 := I1 + Ideal([x0*y,x1*y,x2*y,q]);
FreeResolution(GradedModule(K1));

// Defining type 16a
Q3 := x0^2 - x1^2 + x2*x3 + t^2*A;
F := b*x0 - x1*c + x3*d + t*y*A;
K2 := Ideal([Q3,F,x0*y-t*b,x1*y-t*c,x2*y-t*d,q]);

// Checking Betti table
FreeResolution(GradedModule(K2));

// Type 16d2 to type 16b

//Defining type 16d2
Mat2 := -AntisymmetricMatrix(R,[b,c,x3,d,0,x0,0,x1,0,x2]);
M := (Pfaffians(Mat2,4));
I := Ideal(M);
J := Ideal([x0,x1,x2]);
q := MinimalBasis(ColonIdeal(I,J))[6]+c*y^2;

// It deforms to type 16b
K3 := Ideal([M[1],M[2],M[3],M[5],x0*b+x3*d-t*c*y,x0*y+t*c,x1*y,x2*y,q]);
FreeResolution(GradedModule(K3));
